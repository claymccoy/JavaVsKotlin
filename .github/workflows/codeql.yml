# CodeQL Analysis Workflow
# 
# NOTE: This workflow requires GitHub Advanced Security to be enabled.
# To enable CodeQL scanning:
# 1. Go to your repository on GitHub
# 2. Click Settings > Code security and analysis
# 3. Enable "Code scanning" 
# 4. Click "Set up" for CodeQL analysis
# 5. Uncomment the workflow below
#
# For more information: https://docs.github.com/en/code-security/code-scanning

# Uncomment below when CodeQL is enabled:
#
# name: CodeQL
# 
# on:
#   push:
#     branches: [ master, main ]
#   pull_request:
#     branches: [ master, main ]
#   schedule:
#     - cron: '42 18 * * 1'
# 
# jobs:
#   analyze:
#     name: Analyze
#     runs-on: ubuntu-latest
#     permissions:
#       actions: read
#       contents: read
#       security-events: write
# 
#     strategy:
#       fail-fast: false
#       matrix:
#         language: [ 'java' ]
# 
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
# 
#     - name: Initialize CodeQL
#       uses: github/codeql-action/init@v3
#       with:
#         languages: ${{ matrix.language }}
#         queries: security-and-quality
# 
#     - name: Set up JDK 22
#       uses: actions/setup-java@v4
#       with:
#         java-version: 22
#         distribution: 'temurin'
# 
#     - name: Cache Gradle packages
#       uses: actions/cache@v4
#       with:
#         path: |
#           ~/.gradle/caches
#           ~/.gradle/wrapper
#         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#         restore-keys: |
#           ${{ runner.os }}-gradle-
# 
#     - name: Make gradlew executable
#       run: chmod +x gradlew
# 
#     - name: Build project
#       run: ./gradlew build -x test
# 
#     - name: Perform CodeQL Analysis
#       uses: github/codeql-action/analyze@v3
#       with:
#         category: "/language:${{matrix.language}}"
